1. Follow this tutorial: https://cloud.google.com/kubernetes-engine/docs/tutorials/stateful-workloads/cloudnativepg until they tell you to make a client pod and connect to the database.

2. Create the client pod and apply the setup sql schema to the app database (they tell you how to connect to this db in the tutorial).

3. Upload the server directory of the alerting app repo and make sure you're in the root directory in the cloudshell.

4. Run:

docker build -t alerting-app -f server/Dockerfile .
docker tag alerting-app gcr.io/${PROJECT_ID}/alerting-app
docker push gcr.io/${PROJECT_ID}/alerting-app
kubectl apply -f server/k8s/load-balancer.yaml
kubectl apply -f server/k8s/headless-service.yaml

5. Wait for the load balancer (alerting-app-lb) to get an external IP (warning: everything is happening in the pg-ns namespace). 

Basicly run: "kubectl get svc -n pg-ns", until it is not pending. 

6. Configure a configmap by running:

kubectl create configmap alerting-app-config -n pg-ns --from-literal=external-ip=<load-balancer-ext-ip> --from-literal=smtp-user=<alerting-platform-mail> --from-literal=smtp-pass=<alerting-platform-app-password>

7. Edit server/k8s/stateful-set.yaml. There is 1 <project-id> and you need to replace it with your own project id.

8. Run:

kubectl apply -f server/k8s/stateful-set.yaml